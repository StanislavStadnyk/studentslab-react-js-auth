{"version":3,"sources":["components/Loader/Loader.jsx","components/modals/ConfirmationModal/ConfirmationModal.jsx","pages/Students/Students.js","pages/Students/StudentsContainer.js","pages/Message/Message.js","pages/Message/MessageContainer.js","services/supabaseClient.js","config.js","components/AuthProvider/AuthProvider.js","hooks/index.js","components/Avatar/Avatar.jsx","pages/Profile/Profile.jsx","components/AuthButton/AuthButton.js","components/Header/Header.js","components/Layout/Layout.js","components/Auth/Auth.js","components/ProtectedRouter/ProtectedRouter.js","App.js","index.js"],"names":["Loader","isLoading","text","children","className","Spinner","animation","variant","ConfirmationModal","isOpen","toggle","onSubmit","title","Modal","ModalHeader","ModalFooter","Button","color","onClick","tooltip","UncontrolledTooltip","placement","target","Students","list","addStudent","editStudent","deleteStudent","useState","firstName","setFirstName","lastName","setLastName","editCurrentItem","setEditCurrentItem","deleteCurrenItem","setDeleteCurrentItem","firstNameEdited","editFirstName","lastNameEdited","editLastName","isModalShow","setModal","isConfirmationModalShow","setConfirmationModal","toggleModal","isAddStudentValid","handleToggleConfirmationModal","studentsList","map","student","index","ListGroupItem","key","id","replace","style","cursor","testData","outline","size","find","user","disabled","editableByAdmin","onDeleteStudent","UncontrolledCollapse","toggler","messages","length","message","Alert","messagesBlock","modalWindow","ModalBody","FormGroup","Input","defaultValue","onChange","e","value","Card","CardBody","fontSize","Row","Col","md","overflowY","maxHeight","ListGroup","name","placeholder","StudentsContainer","data","addUser","deleteUser","Message","sendMessage","ref","useRef","selected","setSelected","textInTextArea","setInTextArea","isBtnSendDisabled","setBtnSendDisabled","isBtnClearDisabled","setBtnClearDisabled","isAlertSendMessage","setAlertSendMessage","randomId","parseInt","Math","random","Date","handleSendMessage","userSelected","textareaAndBtn","type","FormText","alertSendMessage","typeAhead","labelKey","option","item","onInputChange","options","current","clear","MessageContainer","supabase","createClient","process","PROD_URL","AuthContext","createContext","AuthProvider","session","setSession","profile","setProfile","useEffect","auth","getSession","then","console","log","from","select","eq","status","error","insert","onAuthStateChange","_event","JSON","parse","window","localStorage","getItem","token","access_token","onLogout","removeItem","to","Provider","useAuth","useContext","Avatar","url","onUpload","avatarUrl","setAvatarUrl","uploading","setUploading","downloadImage","path","storage","download","URL","createObjectURL","uploadAvatar","event","files","Error","file","fileExt","split","pop","fileName","filePath","upload","uploadError","alert","aria-live","maxWidth","src","alt","height","width","htmlFor","accept","Profile","setLoading","getProfile","single","username","website","avatar_url","updateProfile","preventDefault","updates","updated_at","upsert","Form","row","Label","for","sm","email","block","AuthButton","setIsOpen","Navbar","light","expand","Container","NavbarToggler","Collapse","navbar","Nav","NavItem","exact","Layout","Auth","setEmail","isBtnDisabled","handleOnSubmit","signInWithOtp","toast","error_description","offset","ProtectedRouter","App","studentsDataList","setStudentsDataList","getData","handleEditStudent","findIndex","userItem","slice","update","handleAddStudent","dataArray","handleDeleteStudent","delete","promiseLocalData","fetch","res","json","promiseSupabaseData","Promise","all","values","localData","supabaseData","students","concat","catch","err","Header","updatedMessages","userWithNewMessage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af624e05.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spinner } from \"reactstrap\";\n\nimport \"./Loader.scss\";\n\nconst Loader = ({ isLoading, text, children }) => (\n  <div className=\"loader\">\n    {children}\n    {isLoading ? (\n      <div className=\"loader__spinner\">\n        <div>\n          <Spinner animation=\"border\" variant=\"primary\" />\n        </div>\n        {text && <div>{text}</div>}\n      </div>\n    ) : null}\n  </div>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport { Button, Modal, ModalFooter, ModalHeader } from \"reactstrap\";\n\nconst ConfirmationModal = ({ isOpen, toggle, onSubmit, title }) => (\n  <Modal isOpen={isOpen} toggle={toggle}>\n    <ModalHeader toggle={toggle}>{title}</ModalHeader>\n    <ModalFooter>\n      <Button color=\"secondary\" onClick={toggle}>\n        Cancel\n      </Button>\n      <Button color=\"primary\" onClick={onSubmit}>\n        Confirm\n      </Button>\n    </ModalFooter>\n  </Modal>\n);\n\nexport default ConfirmationModal;\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  CardBody,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  FormGroup,\n  Input,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  UncontrolledCollapse,\n  Alert,\n  UncontrolledTooltip,\n} from \"reactstrap\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { ConfirmationModal } from \"../../components/modals\";\n\nconst Students = ({\n  list,\n  isLoading,\n  addStudent,\n  editStudent,\n  deleteStudent,\n}) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const [editCurrentItem, setEditCurrentItem] = useState(\"\");\n  const [deleteCurrenItem, setDeleteCurrentItem] = useState(null);\n\n  const [firstNameEdited, editFirstName] = useState(\"\");\n  const [lastNameEdited, editLastName] = useState(\"\");\n\n  const [isModalShow, setModal] = useState(false);\n  const [isConfirmationModalShow, setConfirmationModal] = useState(false);\n\n  const editMode = (id) => {\n    setEditCurrentItem(list.find((user) => user.id === id));\n    toggleModal();\n  };\n\n  const toggleModal = () => setModal(!isModalShow);\n\n  const isAddStudentValid = !(firstName !== \"\" && lastName !== \"\");\n\n  const messagesBlock = (student) => (\n    <UncontrolledCollapse\n      toggler={`#student-${student.lastName.replace(/\\s/g, \"\") + student.id}`}\n    >\n      <div className=\"mt-3\">\n        {student.messages?.length > 0 ? (\n          <>\n            <p>Messages:</p>\n            {student.messages.map((message) => {\n              return (\n                <Alert color=\"info\" key={message.id}>\n                  {message.message}\n                </Alert>\n              );\n            })}\n          </>\n        ) : (\n          <p>No messages yet!</p>\n        )}\n      </div>\n    </UncontrolledCollapse>\n  );\n\n  const handleToggleConfirmationModal = () => {\n    setConfirmationModal(!isConfirmationModalShow);\n  };\n\n  const handleSubmitConfirmationModal = () => {\n    deleteStudent(deleteCurrenItem);\n    handleToggleConfirmationModal();\n  };\n\n  const onDeleteStudent = (student) => {\n    setDeleteCurrentItem(student);\n    handleToggleConfirmationModal();\n  };\n\n  const studentsList = list.map((student, index) => {\n    return (\n      <ListGroupItem key={student.id + student.lastName}>\n        <div className=\"d-flex align-items-center\">\n          <div\n            className=\"flex-fill\"\n            id={`student-${student.lastName.replace(/\\s/g, \"\") + student.id}`}\n            style={{ cursor: \"pointer\" }}\n          >\n            {index + 1}.{\" \"}\n            <strong>\n              {student.firstName} {student.lastName}\n            </strong>\n            {student?.testData && (\n              <span className=\"ml-3 d-inline-block\">\n                <BsInfoCircle id=\"UncontrolledTooltipExample\" />\n              </span>\n            )}\n          </div>\n\n          <Button\n            outline\n            color=\"info\"\n            size=\"sm\"\n            onClick={() => editMode(student.id)}\n            className=\"ml-2\"\n            disabled={student.editableByAdmin}\n          >\n            Edit\n          </Button>\n\n          <Button\n            outline\n            color=\"danger\"\n            size=\"sm\"\n            onClick={() => onDeleteStudent(student)}\n            className=\"ml-2\"\n            disabled={student.editableByAdmin}\n          >\n            Remove\n          </Button>\n        </div>\n\n        {messagesBlock(student)}\n      </ListGroupItem>\n    );\n  });\n\n  const modalWindow = (\n    <Modal isOpen={isModalShow} toggle={toggleModal}>\n      <ModalHeader toggle={toggleModal}>Edit student</ModalHeader>\n\n      <ModalBody>\n        <FormGroup>\n          <Input\n            defaultValue={editCurrentItem.firstName}\n            onChange={(e) => editFirstName(e.target.value)}\n          />\n        </FormGroup>\n        <Input\n          defaultValue={editCurrentItem.lastName}\n          onChange={(e) => editLastName(e.target.value)}\n        />\n      </ModalBody>\n\n      <ModalFooter>\n        <Button color=\"secondary\" onClick={toggleModal}>\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => {\n            editStudent({\n              id: editCurrentItem.id,\n              firstName: firstNameEdited || editCurrentItem.firstName,\n              lastName: lastNameEdited || editCurrentItem.lastName,\n              testData: editCurrentItem.testData || false,\n              messages: editCurrentItem.messages || [],\n            });\n            toggleModal();\n          }}\n        >\n          Save\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n\n  return (\n    <Card>\n      <CardBody>\n        <h4 className=\"mb-4\">\n          Students list{\" \"}\n          <em style={{ fontSize: 14 }}>(scroll down for more records)</em>\n        </h4>\n\n        <Row>\n          <Col md=\"8\">\n            <div style={{ overflowY: \"auto\", maxHeight: 600 }}>\n              <Loader isLoading={isLoading}>\n                <ListGroup>\n                  {studentsList.length > 0 ? (\n                    studentsList\n                  ) : (\n                    <Alert color=\"warning\">Empty list!</Alert>\n                  )}\n                </ListGroup>\n              </Loader>\n            </div>\n          </Col>\n\n          <Col md=\"4\">\n            <div className=\"mb-4\">\n              <FormGroup>\n                <Input\n                  name=\"firstName\"\n                  id=\"newFirstName\"\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Input\n                  name=\"lastName\"\n                  id=\"newLastName\"\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n              </FormGroup>\n\n              <Button\n                color=\"success\"\n                size=\"sm\"\n                disabled={isAddStudentValid}\n                onClick={() => {\n                  addStudent({\n                    firstName,\n                    lastName,\n                    messages: [],\n                  });\n                  setFirstName(\"\");\n                  setLastName(\"\");\n                }}\n              >\n                Add Student\n              </Button>\n            </div>\n          </Col>\n        </Row>\n\n        {modalWindow}\n        {tooltip}\n\n        <ConfirmationModal\n          isOpen={isConfirmationModalShow}\n          title=\"Are you sure?\"\n          toggle={handleToggleConfirmationModal}\n          onSubmit={handleSubmitConfirmationModal}\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\nconst tooltip = (\n  <UncontrolledTooltip placement=\"top\" target=\"UncontrolledTooltipExample\">\n    This is a test data, it returns back after page refreshing!\n  </UncontrolledTooltip>\n);\n\nexport default Students;\n","import React from \"react\";\nimport Students from \"./Students\";\n\nconst StudentsContainer = ({\n  data,\n  addUser,\n  editStudent,\n  deleteUser,\n  isLoading,\n}) => {\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Students\n      list={data}\n      isLoading={isLoading}\n      addStudent={addUser}\n      editStudent={editStudent}\n      deleteStudent={deleteUser}\n    />\n  );\n};\n\nexport default StudentsContainer;\n","import React, { useState, useRef } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n  Button,\n  Alert,\n  FormText,\n} from \"reactstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nconst Message = ({ list, sendMessage }) => {\n  const ref = useRef();\n  const [selected, setSelected] = useState([]);\n  const [textInTextArea, setInTextArea] = useState(\"\");\n  const [isBtnSendDisabled, setBtnSendDisabled] = useState(true);\n  const [isBtnClearDisabled, setBtnClearDisabled] = useState(true);\n  const [isAlertSendMessage, setAlertSendMessage] = useState(false);\n\n  const randomId = parseInt(Math.random(new Date()) * 1000000);\n\n  const onChangeTypeahead = (item) => {\n    setSelected(item);\n    setBtnClearDisabled(false);\n    setAlertSendMessage(false);\n    setBtnSendDisabled(true);\n  };\n\n  const onInputChangeTypeahead = (value) => {\n    if (value === \"\") {\n      setBtnClearDisabled(true);\n    } else {\n      setBtnClearDisabled(false);\n    }\n  };\n\n  const handleClearTypeahead = () => {\n    ref.current.clear();\n\n    setSelected([]);\n    setBtnClearDisabled(true);\n    setInTextArea(\"\");\n  };\n\n  const onChangeTextarea = (e) => {\n    setInTextArea(e.target.value);\n\n    if (e.target.value.length <= 5) {\n      setBtnSendDisabled(true);\n    } else {\n      setBtnSendDisabled(false);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    // const { data: dataArray } = await supabase\n    //   .from(\"messages\")\n    //   .insert(student)\n    //   .select();\n\n    sendMessage(userSelected, {\n      id: randomId,\n      message: textInTextArea,\n    });\n    setInTextArea(\"\");\n    setAlertSendMessage(true);\n  };\n\n  const userSelected = selected.length === 1 && selected[0];\n  const textareaAndBtn = selected.length === 1 && !isAlertSendMessage && (\n    <div>\n      <FormGroup>\n        <Input\n          type=\"textarea\"\n          name=\"text\"\n          id=\"exampleText\"\n          placeholder=\"Input message\"\n          defaultValue={textInTextArea}\n          onChange={onChangeTextarea}\n        />\n        <FormText>Min length 5 characters!</FormText>\n      </FormGroup>\n\n      <FormGroup>\n        <Button\n          color=\"primary\"\n          disabled={isBtnSendDisabled}\n          onClick={() => handleSendMessage()}\n        >\n          Send message\n        </Button>\n      </FormGroup>\n    </div>\n  );\n\n  const alertSendMessage = selected.length === 1 && isAlertSendMessage && (\n    <Alert color=\"success\">\n      Your message for {userSelected.firstName} {userSelected.lastName} has been\n      sent successfully!\n    </Alert>\n  );\n\n  const typeAhead = (\n    <FormGroup>\n      <div className=\"d-flex\">\n        <div className=\"flex-fill mr-3\">\n          <Typeahead\n            id=\"students-list\"\n            labelKey={(option) => `${option.firstName} ${option.lastName}`}\n            ref={ref}\n            onChange={onChangeTypeahead}\n            onInputChange={(e) => onInputChangeTypeahead(e)}\n            placeholder=\"Choose a student...\"\n            options={list}\n          />\n        </div>\n        <Button onClick={handleClearTypeahead} disabled={isBtnClearDisabled}>\n          Clear\n        </Button>\n      </div>\n    </FormGroup>\n  );\n\n  return (\n    <Card>\n      <CardBody>\n        <h4 className=\"mb-4\">Send message to anybody</h4>\n\n        <Row>\n          <Col md=\"8\">\n            {typeAhead}\n            {textareaAndBtn}\n            {alertSendMessage}\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Message;\n","import React from 'react';\n\nimport Message from './Message';\n\nconst MessageContainer = ({ data, sendMessage }) => {\n  if (!data) {\n    return null;\n  }\n\n  return <Message list={data} sendMessage={sendMessage} />;\n};\n\nexport default MessageContainer;\n","import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n","const PROD_URL = \"/studentslab-react-js-auth\";\n\nexport { PROD_URL };\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { supabase } from \"../../services/supabaseClient\";\nimport { PROD_URL } from \"../../config\";\n\n// global context\nexport const AuthContext = createContext(null);\n\nconst AuthProvider = ({ children }) => {\n  const [session, setSession] = useState(null);\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    supabase.auth.getSession().then(async ({ data: { session } }) => {\n      console.log(\"getSession\", session);\n      setSession(session);\n\n      if (session) {\n        // check if the user exists in profiles table\n        const { status, error } = await supabase\n          .from(\"profiles\")\n          .select()\n          .eq(\"id\", session.user.id);\n        if (error) throw error;\n\n        // if user doesn't exist in profile table, add him to profile table\n        if (status !== 200) {\n          const { error } = await supabase.from(\"profiles\").insert({\n            id: session.user.id,\n          });\n          if (error) throw error;\n        }\n      }\n    });\n\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  }, []);\n\n  const handleLogout = () => {\n    window.localStorage.removeItem(\"sb-xftszbubwqexxryeewfj-auth-token\");\n    setSession(null);\n\n    return <Redirect to={`${PROD_URL}/login`} />;\n  };\n\n  const handleSetProfile = (profile) => {\n    setProfile(profile);\n  };\n\n  const value = {\n    // TODO: need to refactor local storage\n    user:\n      JSON.parse(\n        window.localStorage.getItem(\"sb-xftszbubwqexxryeewfj-auth-token\")\n      )?.user || session?.user,\n    token:\n      JSON.parse(\n        window.localStorage.getItem(\"sb-xftszbubwqexxryeewfj-auth-token\")\n      )?.access_token || session?.access_token,\n    onLogout: handleLogout,\n    profile,\n    setProfile: handleSetProfile,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n","import { useContext } from \"react\";\n\nimport { AuthContext } from \"../components/AuthProvider/AuthProvider\";\n\nconst useAuth = () => useContext(AuthContext);\n\nexport { useAuth };\n","import React, { useEffect, useState } from \"react\";\nimport { FormGroup } from \"reactstrap\";\n\nimport { supabase } from \"../../services/supabaseClient\";\n\nexport default function Avatar({ url, size, onUpload }) {\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  // TODO: image downloads all the time when open the page\n  useEffect(() => {\n    if (url) downloadImage(url);\n  }, [url]);\n\n  const downloadImage = async (path) => {\n    try {\n      const { data, error } = await supabase.storage\n        .from(\"avatars\")\n        .download(path);\n      if (error) throw error;\n\n      const url = URL.createObjectURL(data);\n      setAvatarUrl(url);\n    } catch (error) {\n      console.log(\"Error downloading image: \", error.message);\n    }\n  };\n\n  const uploadAvatar = async (event) => {\n    try {\n      setUploading(true);\n\n      if (!event.target.files || event.target.files.length === 0) {\n        throw new Error(\"You must select an image to upload.\");\n      }\n\n      const file = event.target.files[0];\n      const fileExt = file.name.split(\".\").pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `${fileName}`;\n\n      let { error: uploadError } = await supabase.storage\n        .from(\"avatars\")\n        .upload(filePath, file);\n\n      if (uploadError) {\n        throw uploadError;\n      }\n\n      onUpload(filePath);\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div aria-live=\"polite\">\n      <FormGroup>\n        <div className=\"m-auto\" style={{ maxWidth: size }}>\n          <img\n            src={\n              avatarUrl ? avatarUrl : `https://place-hold.it/${size}x${size}`\n            }\n            alt={avatarUrl ? \"Avatar\" : \"No image\"}\n            style={{ height: size, width: \"100%\" }}\n          />\n        </div>\n      </FormGroup>\n\n      <FormGroup>\n        {uploading ? (\n          \"Uploading...\"\n        ) : (\n          <>\n            <label className=\"btn btn-primary btn-block\" htmlFor=\"single\">\n              Upload an avatar\n            </label>\n            <div className=\"d-none\">\n              <input\n                type=\"file\"\n                id=\"single\"\n                accept=\"image/*\"\n                onChange={uploadAvatar}\n                disabled={uploading}\n              />\n            </div>\n          </>\n        )}\n      </FormGroup>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\n\nimport { supabase } from \"../../services/supabaseClient\";\nimport { useAuth } from \"../../hooks\";\nimport Loader from \"../../components/Loader/Loader\";\nimport Avatar from \"../../components/Avatar/Avatar\";\n\nconst Profile = () => {\n  const [isLoading, setLoading] = useState(false);\n  const { user, profile, setProfile } = useAuth();\n\n  const getProfile = async () => {\n    try {\n      setLoading(true);\n\n      let { data, error, status } = await supabase\n        .from(\"profiles\")\n        .select(`username, website, avatar_url`)\n        .eq(\"id\", user.id)\n        .single();\n      if (error && status !== 406) throw error;\n\n      if (data) {\n        setProfile({\n          username: data.username,\n          website: data.website,\n          avatar_url: data.avatar_url,\n        });\n      }\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // TODO: need to remove warning\n    if (!profile) getProfile();\n  }, [profile]);\n\n  const updateProfile = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n\n      const updates = {\n        id: user.id,\n        username: profile.username,\n        website: profile.website,\n        avatar_url: profile.avatar_url,\n        updated_at: new Date(),\n      };\n\n      const { error } = await supabase.from(\"profiles\").upsert(updates);\n      if (error) throw error;\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!profile) {\n    return <div>No data</div>;\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <h4 className=\"mb-4\">Profile</h4>\n\n        <Loader isLoading={isLoading}>\n          <Form onSubmit={updateProfile}>\n            <Row>\n              <Col md={3}>\n                <Avatar\n                  url={profile.avatar_url}\n                  size={146}\n                  onUpload={(url) => {\n                    setProfile({\n                      ...profile,\n                      avatar_url: url,\n                    });\n                  }}\n                />\n              </Col>\n\n              <Col md={9}>\n                <FormGroup row={true}>\n                  <Label for=\"email\" sm={3}>\n                    Email:\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"with a placeholder\"\n                      type=\"email\"\n                      value={user.email}\n                      disabled={true}\n                    />\n                  </Col>\n                </FormGroup>\n\n                <FormGroup row={true}>\n                  <Label for=\"name\" sm={3}>\n                    Name:\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      value={profile.username || \"\"}\n                      onChange={(e) =>\n                        setProfile({\n                          ...profile,\n                          username: e.target.value,\n                        })\n                      }\n                    />\n                  </Col>\n                </FormGroup>\n\n                <FormGroup row={true}>\n                  <Label for=\"name\" sm={3}>\n                    Website:\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      id=\"website\"\n                      name=\"website\"\n                      type=\"url\"\n                      value={profile.website || \"\"}\n                      onChange={(e) =>\n                        setProfile({\n                          ...profile,\n                          website: e.target.value,\n                        })\n                      }\n                    />\n                  </Col>\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <Button block={true} color=\"success\" disabled={isLoading}>\n              Update profile\n            </Button>\n          </Form>\n        </Loader>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { useAuth } from \"../../hooks\";\nimport { PROD_URL } from \"../../config\";\n\nconst AuthButton = () => {\n  const { token, onLogout } = useAuth();\n\n  return (\n    <>\n      {token ? (\n        <Button size=\"sm\" color=\"danger\" onClick={onLogout}>\n          Signout\n        </Button>\n      ) : (\n        <Link to={`${PROD_URL}/login`}>\n          <Button size=\"sm\" color=\"success\">\n            Login\n          </Button>\n        </Link>\n      )}\n    </>\n  );\n};\n\nexport default AuthButton;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n} from \"reactstrap\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport { PROD_URL } from \"../../config\";\nimport AuthButton from \"../AuthButton/AuthButton\";\n\nconst Students = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Navbar color=\"light\" light expand=\"md\" className=\"mb-5\">\n      <Container>\n        <Link to={`${PROD_URL}`} className=\"navbar-brand\">\n          <strong>StudentsLab</strong>\n        </Link>\n\n        <NavbarToggler onClick={toggle} />\n\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem className=\"mr-3\">\n              <NavLink to={`${PROD_URL}`} exact className=\"nav-link\">\n                Dashboard\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <NavLink to={`${PROD_URL}/message`} className=\"nav-link\">\n                Send Message\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <NavLink to={`${PROD_URL}/profile`} className=\"nav-link\">\n                Profile\n              </NavLink>\n            </NavItem>\n          </Nav>\n\n          <AuthButton />\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Students;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nconst Layout = ({ children }) => (\n  <Container>\n    <Row>\n      <Col>{children}</Col>\n    </Row>\n  </Container>\n);\n\nexport default Layout;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Row,\n} from \"reactstrap\";\nimport { toast } from \"react-toastify\";\n\nimport { supabase } from \"../../services/supabaseClient\";\nimport { useAuth } from \"../../hooks\";\nimport { PROD_URL } from \"../../config\";\nimport Loader from \"../Loader/Loader\";\n\nconst Auth = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const isBtnDisabled = email === \"\";\n  const { token } = useAuth();\n\n  if (token) {\n    return <Redirect to={`${PROD_URL}`} />;\n  }\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const { error } = await supabase.auth.signInWithOtp({ email });\n\n      if (error) throw error;\n      toast(\"Check your email for the login link!\", {\n        type: \"success\",\n      });\n    } catch (error) {\n      toast(error.error_description || error.message, {\n        type: \"error\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOnChange = (e) => setEmail(e.target.value);\n\n  return (\n    <Row>\n      <Col\n        md={{\n          offset: 3,\n          size: 6,\n        }}\n      >\n        <Card>\n          <CardBody aria-live=\"polite\">\n            <Loader isLoading={isLoading} text=\"Sending magic link...\">\n              <h1 className=\"mb-4\">Supabase + React</h1>\n              <p className=\"mb-4\">\n                Sign in via magic link with your email below\n              </p>\n\n              <Form onSubmit={handleOnSubmit}>\n                <FormGroup>\n                  <Input\n                    id=\"email\"\n                    className=\"inputField\"\n                    type=\"email\"\n                    placeholder=\"Your email\"\n                    value={email}\n                    onChange={handleOnChange}\n                  />\n                </FormGroup>\n\n                <Button\n                  color=\"success\"\n                  block={true}\n                  className=\"text-uppercase\"\n                  type=\"submit\"\n                  disabled={isBtnDisabled}\n                >\n                  Send magic link\n                </Button>\n              </Form>\n            </Loader>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { PROD_URL } from \"../../config\";\nimport { useAuth } from \"../../hooks\";\n\nconst ProtectedRouter = ({ children }) => {\n  const { token } = useAuth();\n\n  if (!token) {\n    return <Redirect to={`${PROD_URL}/login`} />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRouter;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\n// TODO: make clear import file\nimport { StudentsContainer, MessageContainer } from \"./pages/index\";\nimport { Auth, Header, Layout } from \"./components/index\";\n// TODO: need to refactor PROD URL\nimport { PROD_URL } from \"./config\";\nimport { supabase } from \"./services/supabaseClient\";\nimport AuthProvider from \"./components/AuthProvider/AuthProvider\";\nimport ProtectedRouter from \"./components/ProtectedRouter/ProtectedRouter\";\nimport { Profile } from \"./pages\";\n\nconst App = () => {\n  const [studentsDataList, setStudentsDataList] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getData();\n\n    // TODO: request for messages from table\n    // const promiseSupabaseData = await supabase\n    //   .from(\"students\")\n    //   .select()\n    //   .filter(\"id\", \"in\", \"(47, 49)\");\n    //\n    // console.log(\"promiseSupabaseData\", promiseSupabaseData);\n  }, []);\n\n  const handleEditStudent = async (student) => {\n    const index = studentsDataList.findIndex(\n      (userItem) => userItem.id === student.id\n    );\n\n    try {\n      setLoading(true);\n\n      if (student?.testData) {\n        setStudentsDataList([\n          ...studentsDataList.slice(0, index),\n          student,\n          ...studentsDataList.slice(index + 1),\n        ]);\n        return;\n      }\n\n      delete student.testData;\n      const { error } = await supabase\n        .from(\"students\")\n        .update(student)\n        .eq(\"id\", student.id);\n      if (error) throw error;\n\n      setStudentsDataList([\n        ...studentsDataList.slice(0, index),\n        student,\n        ...studentsDataList.slice(index + 1),\n      ]);\n    } catch (error) {\n      alert(error.error_description || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddStudent = async (student) => {\n    try {\n      setLoading(true);\n      const { data: dataArray, error } = await supabase\n        .from(\"students\")\n        .insert(student)\n        .select();\n      if (error) throw error;\n\n      setStudentsDataList([...studentsDataList, dataArray[0]]);\n    } catch (error) {\n      alert(error.error_description || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteStudent = async (student) => {\n    const index = studentsDataList.findIndex((user) => user.id === student.id);\n\n    try {\n      setLoading(true);\n      await supabase.from(\"students\").delete().eq(\"id\", student.id);\n      setStudentsDataList([\n        ...studentsDataList.slice(0, index),\n        ...studentsDataList.slice(index + 1, studentsDataList.length),\n      ]);\n    } catch (error) {\n      alert(error.error_description || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSendMessage = (user, message) => {\n    const updatedMessages = [...user.messages, message];\n    const userWithNewMessage = { ...user, messages: updatedMessages };\n    const index = studentsDataList.findIndex(\n      (userItem) => userItem.id === user.id\n    );\n\n    setStudentsDataList([\n      ...studentsDataList.slice(0, index),\n      userWithNewMessage,\n      ...studentsDataList.slice(index + 1),\n    ]);\n  };\n\n  const getData = () => {\n    const promiseLocalData = fetch(`${PROD_URL}/data.json`).then((res) =>\n      res.json()\n    );\n    const promiseSupabaseData = supabase.from(\"students\").select();\n\n    Promise.all([promiseLocalData, promiseSupabaseData])\n      .then((values) => {\n        const [localData, supabaseData] = values;\n\n        if (supabaseData?.data.length) {\n          const data = localData.students.concat(supabaseData.data);\n          setStudentsDataList(data);\n          return;\n        }\n\n        setStudentsDataList(localData.students);\n      })\n      .catch((err) => {\n        console.error(\"getData Promise.all\", err);\n      });\n  };\n\n  return (\n    <AuthProvider>\n      <Router>\n        <Header />\n\n        <Layout>\n          <Switch>\n            <Route path={`${PROD_URL}/login`} exact>\n              <Auth />\n            </Route>\n\n            <Route path={`${PROD_URL}`} exact>\n              <ProtectedRouter>\n                <StudentsContainer\n                  data={studentsDataList}\n                  isLoading={isLoading}\n                  editStudent={handleEditStudent}\n                  addUser={handleAddStudent}\n                  deleteUser={handleDeleteStudent}\n                />\n              </ProtectedRouter>\n            </Route>\n\n            <Route path={`${PROD_URL}/message`} exact>\n              <MessageContainer\n                data={studentsDataList}\n                sendMessage={handleSendMessage}\n              />\n            </Route>\n\n            <Route path={`${PROD_URL}/profile`} exact>\n              <ProtectedRouter>\n                <Profile />\n              </ProtectedRouter>\n            </Route>\n\n            <Route path=\"*\">\n              <Redirect to={`${PROD_URL}`} />\n            </Route>\n          </Switch>\n        </Layout>\n\n        <ToastContainer />\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}