{"version":3,"sources":["components/Loader/Loader.jsx","components/modals/ConfirmationModal/ConfirmationModal.jsx","pages/Students/components/EditModal/EditModal.jsx","pages/Students/components/Tooltip/Tooltip.jsx","pages/Students/components/Search/Search.jsx","pages/Students/components/Add/Add.jsx","services/supabaseClient.js","pages/Students/components/Messages/Messages.jsx","pages/Students/components/ListItem/ListItem.jsx","pages/Students/components/Header/Header.jsx","pages/Students/Students.js","pages/Students/helpers.js","pages/Students/StudentsContainer.js","config.js","components/AuthProvider/AuthProvider.js","hooks/index.js","pages/Message/Message.js","pages/Message/MessageContainer.js","components/Avatar/Avatar.jsx","pages/Profile/Profile.jsx","components/AuthButton/AuthButton.js","components/Header/Header.js","components/Layout/Layout.js","components/Auth/Auth.js","components/ProtectedRouter/ProtectedRouter.js","App.js","index.js"],"names":["Loader","isLoading","text","children","className","Spinner","animation","variant","ConfirmationModal","isOpen","toggle","onSubmit","title","Modal","ModalHeader","ModalFooter","Button","color","onClick","EditModal","item","useState","firstNameEdited","editFirstName","lastNameEdited","editLastName","ModalBody","FormGroup","Input","defaultValue","firstName","onChange","e","target","value","lastName","id","testData","Tooltip","UncontrolledTooltip","placement","Search","InputGroup","placeholder","InputGroupAddon","addonType","InputGroupText","Add","onAdd","setFirstName","setLastName","isAddStudentValid","name","size","disabled","supabase","createClient","process","Messages","student","openCurrentItem","setOpenCurrentItem","isMessagesLoading","setMessagesLoading","messages","setMessages","getMessagesByStudentId","from","select","eq","data","error","messageIndex","length","findIndex","message","studentId","updated","toast","type","studentMessages","filter","UncontrolledCollapse","onEntering","toggler","replace","map","style","fontSize","Date","createdAt","toLocaleString","authorName","Alert","key","ListItem","index","onEdit","onRemove","editableByAdmin","ListGroupItem","cursor","outline","Header","Students","students","list","isDataLoading","addStudent","editStudent","deleteStudent","editCurrentItem","setEditCurrentItem","deleteCurrenItem","setDeleteCurrentItem","isEditModal","setEditModal","isConfirmationModalShow","setConfirmationModal","searchValue","setSearchValue","toggleEditModal","toggleConfirmationModal","handleEditModal","find","user","handleRemoveStudent","Card","CardBody","Row","Col","md","overflowY","maxHeight","paddingBottom","ListGroup","toLowerCase","includes","findIndexStudentById","StudentsContainer","onSetData","setLoading","handleEditStudent","slice","update","handleAddStudent","insert","dataArray","handleDeleteStudent","delete","PROD_URL","AuthContext","createContext","AuthProvider","session","setSession","profile","setProfile","useEffect","auth","getSession","then","console","log","status","username","website","avatar_url","onAuthStateChange","_event","JSON","parse","window","localStorage","getItem","token","access_token","onLogout","removeItem","to","Provider","useAuth","useContext","Message","ref","useRef","selected","setSelected","textInTextArea","setInTextArea","isBtnSendDisabled","setBtnSendDisabled","isBtnClearDisabled","setBtnClearDisabled","isAlertSendMessage","setAlertSendMessage","handleSendMessage","preventDefault","userSelected","textareaAndBtn","FormText","alertSendMessage","typeAhead","labelKey","option","onInputChange","options","current","clear","Form","MessageContainer","Avatar","url","onUpload","avatarUrl","setAvatarUrl","uploading","setUploading","downloadImage","path","storage","download","URL","createObjectURL","uploadAvatar","event","files","Error","file","fileExt","split","pop","fileName","Math","random","filePath","upload","uploadError","alert","aria-live","maxWidth","src","alt","height","width","htmlFor","accept","Profile","updateProfile","updates","updated_at","upsert","row","Label","for","sm","email","block","AuthButton","setIsOpen","Navbar","light","expand","Container","NavbarToggler","Collapse","navbar","Nav","NavItem","exact","Layout","Auth","setEmail","isBtnDisabled","handleOnSubmit","signInWithOtp","offset","ProtectedRouter","App","studentsDataList","setStudentsDataList","setDataLoading","promiseLocalData","fetch","res","json","promiseSupabaseData","order","ascending","Promise","all","values","localData","supabaseData","concat","catch","err","finally","getData","onDataLoading","autoClose","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.147d9903.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spinner } from \"reactstrap\";\n\nimport \"./Loader.scss\";\n\nconst Loader = ({ isLoading, text, children }) => (\n  <div className=\"loader\">\n    {children}\n    {isLoading ? (\n      <div className=\"loader__spinner\">\n        <div>\n          <Spinner animation=\"border\" variant=\"primary\" />\n        </div>\n        {text && <div>{text}</div>}\n      </div>\n    ) : null}\n  </div>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport { Button, Modal, ModalFooter, ModalHeader } from \"reactstrap\";\n\nconst ConfirmationModal = ({ isOpen, toggle, onSubmit, title }) => (\n  <Modal isOpen={isOpen} toggle={toggle}>\n    <ModalHeader toggle={toggle}>{title}</ModalHeader>\n    <ModalFooter>\n      <Button color=\"secondary\" onClick={toggle}>\n        Cancel\n      </Button>\n      <Button color=\"primary\" onClick={onSubmit}>\n        Confirm\n      </Button>\n    </ModalFooter>\n  </Modal>\n);\n\nexport default ConfirmationModal;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  FormGroup,\n  Input,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\n\nconst EditModal = ({ isOpen, toggle, item, onSubmit }) => {\n  const [firstNameEdited, editFirstName] = useState(\"\");\n  const [lastNameEdited, editLastName] = useState(\"\");\n\n  const handleFirstName = (e) => editFirstName(e.target.value);\n  const handleLastName = (e) => editLastName(e.target.value);\n  const handleSubmit = () => {\n    onSubmit({\n      id: item.id,\n      firstName: firstNameEdited || item.firstName,\n      lastName: lastNameEdited || item.lastName,\n      testData: item.testData || false,\n    });\n    toggle();\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Edit student 2</ModalHeader>\n\n      <ModalBody>\n        <FormGroup>\n          <Input defaultValue={item.firstName} onChange={handleFirstName} />\n        </FormGroup>\n        <Input defaultValue={item.lastName} onChange={handleLastName} />\n      </ModalBody>\n\n      <ModalFooter>\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleSubmit}>\n          Save\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default EditModal;\n","import React from \"react\";\nimport { UncontrolledTooltip } from \"reactstrap\";\n\nconst Tooltip = () => (\n  <UncontrolledTooltip placement=\"top\" target=\"UncontrolledTooltipExample\">\n    This is a test data, it returns back after page refreshing!\n  </UncontrolledTooltip>\n);\n\nexport default Tooltip;\n","import React from \"react\";\nimport {\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from \"reactstrap\";\nimport { BsSearch } from \"react-icons/bs\";\n\nconst Search = ({ onChange }) => {\n  return (\n    <FormGroup>\n      <InputGroup>\n        <Input placeholder=\"Search student\" onChange={onChange} />\n        <InputGroupAddon addonType=\"append\">\n          <InputGroupText>\n            <BsSearch />\n          </InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </FormGroup>\n  );\n};\n\nSearch.propTypes = {};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport { Button, FormGroup, Input } from \"reactstrap\";\n\nconst Add = ({ onAdd }) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const isAddStudentValid = !(firstName !== \"\" && lastName !== \"\");\n\n  const handleFirstName = (e) => setFirstName(e.target.value);\n  const handleLastName = (e) => setLastName(e.target.value);\n\n  return (\n    <>\n      <h6>Add a new student</h6>\n      <FormGroup>\n        <Input\n          name=\"firstName\"\n          id=\"newFirstName\"\n          placeholder=\"First Name\"\n          value={firstName}\n          onChange={handleFirstName}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Input\n          name=\"lastName\"\n          id=\"newLastName\"\n          placeholder=\"Last Name\"\n          value={lastName}\n          onChange={handleLastName}\n        />\n      </FormGroup>\n\n      <Button\n        color=\"success\"\n        size=\"sm\"\n        disabled={isAddStudentValid}\n        onClick={() => {\n          onAdd({\n            firstName,\n            lastName,\n          });\n          setFirstName(\"\");\n          setLastName(\"\");\n        }}\n      >\n        Add Student\n      </Button>\n    </>\n  );\n};\n\nexport default Add;\n","import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n","import React, { useState } from \"react\";\nimport { Alert, UncontrolledCollapse } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\n\nimport Loader from \"../../../../components/Loader/Loader\";\nimport { supabase } from \"../../../../services/supabaseClient\";\n\nconst Messages = ({ student }) => {\n  const [openCurrentItem, setOpenCurrentItem] = useState(null);\n  const [isMessagesLoading, setMessagesLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const getMessagesByStudentId = async (student) => {\n    setOpenCurrentItem(student.id);\n    try {\n      setMessagesLoading(true);\n      const { data, error } = await supabase\n        .from(\"messages\")\n        .select()\n        .eq(\"studentId\", student.id);\n\n      if (error) throw error;\n\n      const messageIndex =\n        messages.length > 0\n          ? messages.findIndex((message) => message.studentId === student.id)\n          : -1;\n\n      if (messageIndex !== -1) {\n        const updated = [...messages, (messages[messageIndex].messages = data)];\n        setMessages(updated);\n      } else {\n        const updated = [\n          ...messages,\n          {\n            studentId: student.id,\n            messages: data,\n          },\n        ];\n        setMessages(updated);\n      }\n    } catch (error) {\n      toast(error.message, {\n        type: \"error\",\n      });\n    } finally {\n      setMessagesLoading(false);\n    }\n  };\n\n  const studentMessages = messages.filter(\n    (message) => message.studentId === student.id\n  );\n\n  return (\n    <UncontrolledCollapse\n      onEntering={() => getMessagesByStudentId(student)}\n      toggler={`#student-${student.lastName.replace(/\\s/g, \"\") + student.id}`}\n    >\n      <Loader isLoading={isMessagesLoading && openCurrentItem === student.id}>\n        <div className=\"mt-3\">\n          {studentMessages[0]?.messages?.length ? (\n            <>\n              <p>Messages:</p>\n              <ul className=\"list-unstyled\">\n                {studentMessages[0].messages.map((message) => {\n                  return (\n                    <li>\n                      <div className=\"d-flex justify-content-between align-items-end\">\n                        <em style={{ fontSize: 10 }}>\n                          {new Date(message.createdAt).toLocaleString()}\n                        </em>\n                        <strong style={{ fontSize: 12 }}>\n                          {message.authorName\n                            ? message.authorName\n                            : \"Anonymous :)\"}\n                        </strong>\n                      </div>\n                      <Alert color=\"info\" key={message.id}>\n                        {message.text}\n                      </Alert>\n                    </li>\n                  );\n                })}\n              </ul>\n            </>\n          ) : (\n            <p>No messages here yet!</p>\n          )}\n        </div>\n      </Loader>\n    </UncontrolledCollapse>\n  );\n};\n\nexport default Messages;\n","import React from \"react\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport { Button, ListGroupItem } from \"reactstrap\";\n\nimport Messages from \"../Messages/Messages\";\n\nconst ListItem = ({ index, item, onEdit, onRemove }) => {\n  const student = item;\n  const { id, firstName, lastName, testData, editableByAdmin } = item;\n\n  return (\n    <ListGroupItem key={id + lastName}>\n      <div className=\"d-flex align-items-center\">\n        <div\n          className=\"flex-fill\"\n          id={`student-${lastName.replace(/\\s/g, \"\") + id}`}\n          style={{ cursor: \"pointer\" }}\n        >\n          {index + 1}.{\" \"}\n          <strong>\n            {firstName} {lastName}\n          </strong>\n          {testData && (\n            <span className=\"ml-3 d-inline-block\">\n              <BsInfoCircle id=\"UncontrolledTooltipExample\" />\n            </span>\n          )}\n        </div>\n\n        <Button\n          outline\n          color=\"info\"\n          size=\"sm\"\n          onClick={() => onEdit(id)}\n          className=\"ml-2\"\n          disabled={editableByAdmin}\n        >\n          Edit\n        </Button>\n\n        <Button\n          outline\n          color=\"danger\"\n          size=\"sm\"\n          onClick={() => onRemove(student)}\n          className=\"ml-2\"\n          disabled={editableByAdmin}\n        >\n          Remove\n        </Button>\n      </div>\n\n      <Messages student={student} />\n    </ListGroupItem>\n  );\n};\n\nexport default ListItem;\n","import React from \"react\";\n\nconst Header = () => (\n  <h4 className=\"mb-4\">\n    Students list{\" \"}\n    <em style={{ fontSize: 14 }}>(scroll down for more records)</em>\n  </h4>\n);\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Card, CardBody, ListGroup, Row, Col, Alert } from \"reactstrap\";\n\nimport Loader from \"../../components/Loader/Loader\";\nimport { ConfirmationModal } from \"../../components/modals\";\nimport EditModal from \"./components/EditModal/EditModal\";\nimport Tooltip from \"./components/Tooltip/Tooltip\";\nimport Search from \"./components/Search/Search\";\nimport Add from \"./components/Add/Add\";\nimport ListItem from \"./components/ListItem/ListItem\";\nimport Header from \"./components/Header/Header\";\n\nconst Students = ({\n  list,\n  isLoading,\n  isDataLoading,\n  addStudent,\n  editStudent,\n  deleteStudent,\n}) => {\n  const [editCurrentItem, setEditCurrentItem] = useState(\"\");\n  const [deleteCurrenItem, setDeleteCurrentItem] = useState(null);\n\n  const [isEditModal, setEditModal] = useState(false);\n  const [isConfirmationModalShow, setConfirmationModal] = useState(false);\n\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const toggleEditModal = () => setEditModal(!isEditModal);\n  const toggleConfirmationModal = () =>\n    setConfirmationModal(!isConfirmationModalShow);\n\n  const handleEditModal = (id) => {\n    setEditCurrentItem(list.find((user) => user.id === id));\n    toggleEditModal();\n  };\n\n  const handleSubmitConfirmationModal = () => {\n    deleteStudent(deleteCurrenItem);\n    toggleConfirmationModal();\n  };\n\n  const handleRemoveStudent = (student) => {\n    setDeleteCurrentItem(student);\n    toggleConfirmationModal();\n  };\n\n  const handleSearch = (e) => {\n    setSearchValue(e.target.value.toLowerCase());\n  };\n\n  const filteredList = (students) =>\n    students.filter((student) =>\n      student.firstName.toLowerCase().includes(searchValue)\n    );\n\n  return (\n    <Card className=\"mb-4\">\n      <CardBody>\n        <Header />\n\n        <Loader isLoading={isDataLoading}>\n          <Row className=\"flex-column-reverse flex-md-row\">\n            <Col md=\"8\">\n              <div\n                style={{\n                  overflowY: \"auto\",\n                  maxHeight: 600,\n                  paddingBottom: \"1rem\",\n                }}\n              >\n                <Loader isLoading={isLoading}>\n                  {list?.length > 0 ? (\n                    <ListGroup>\n                      {filteredList(list).map((student, index) => (\n                        <ListItem\n                          key={student.id + student.lastName}\n                          index={index}\n                          item={student}\n                          onEdit={handleEditModal}\n                          onRemove={handleRemoveStudent}\n                        />\n                      ))}\n                    </ListGroup>\n                  ) : (\n                    <Alert color=\"warning\">Empty list!</Alert>\n                  )}\n                </Loader>\n              </div>\n            </Col>\n\n            <Col md=\"4\">\n              <div className=\"mb-5\">\n                <Search onChange={handleSearch} />\n              </div>\n\n              <div className=\"mb-4\">\n                <Add onAdd={addStudent} />\n              </div>\n            </Col>\n          </Row>\n        </Loader>\n\n        <EditModal\n          isOpen={isEditModal}\n          toggle={toggleEditModal}\n          item={editCurrentItem}\n          onSubmit={editStudent}\n        />\n\n        <ConfirmationModal\n          isOpen={isConfirmationModalShow}\n          title=\"Are you sure?\"\n          toggle={toggleConfirmationModal}\n          onSubmit={handleSubmitConfirmationModal}\n        />\n\n        {list && <Tooltip />}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Students;\n","export const findIndexStudentById = (students, id) =>\n  students.findIndex((student) => student.id === id);\n","import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport Students from \"./Students\";\nimport { supabase } from \"../../services/supabaseClient\";\nimport { findIndexStudentById } from \"./helpers\";\n\nconst StudentsContainer = ({ data, isDataLoading, onSetData }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const handleEditStudent = async (student) => {\n    const id = student.id;\n    const index = findIndexStudentById(data, id);\n\n    try {\n      setLoading(true);\n\n      if (student?.testData) {\n        onSetData([...data.slice(0, index), student, ...data.slice(index + 1)]);\n        return;\n      }\n\n      delete student.testData;\n      const { error } = await supabase\n        .from(\"students\")\n        .update(student)\n        .eq(\"id\", id);\n\n      if (error) throw error;\n\n      onSetData([...data.slice(0, index), student, ...data.slice(index + 1)]);\n    } catch (error) {\n      toast(error.message, {\n        type: \"error\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddStudent = async (student) => {\n    try {\n      setLoading(true);\n      const { data: dataArray, error } = await supabase\n        .from(\"students\")\n        .insert(student)\n        .select();\n\n      if (error) throw error;\n\n      onSetData([...data, dataArray[0]]);\n    } catch (error) {\n      toast(error.message, {\n        type: \"error\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteStudent = async (student) => {\n    const id = student.id;\n    const index = findIndexStudentById(data, id);\n\n    try {\n      setLoading(true);\n      const { error } = await supabase.from(\"students\").delete().eq(\"id\", id);\n\n      if (error) throw error;\n\n      onSetData([\n        ...data.slice(0, index),\n        ...data.slice(index + 1, data.length),\n      ]);\n    } catch (error) {\n      toast(error.message, {\n        type: \"error\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Students\n      list={data}\n      isLoading={isLoading}\n      isDataLoading={isDataLoading}\n      addStudent={handleAddStudent}\n      editStudent={handleEditStudent}\n      deleteStudent={handleDeleteStudent}\n    />\n  );\n};\n\nexport default StudentsContainer;\n","const PROD_URL = \"/studentslab-react-js-auth\";\n\nexport { PROD_URL };\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { supabase } from \"../../services/supabaseClient\";\nimport { PROD_URL } from \"../../config\";\n\n// global context\nexport const AuthContext = createContext(null);\n\nconst AuthProvider = ({ children }) => {\n  const [session, setSession] = useState(null);\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    supabase.auth.getSession().then(async ({ data: { session } }) => {\n      console.log(\"getSession\", session);\n      setSession(session);\n\n      if (session) {\n        // check if the user exists in profiles table\n        const { status, error, data } = await supabase\n          .from(\"profiles\")\n          .select()\n          .eq(\"id\", session.user.id);\n        if (error) throw error;\n\n        if (data) {\n          const [user] = data;\n\n          setProfile({\n            username: user?.username,\n            website: user?.website,\n            avatar_url: user?.avatar_url,\n          });\n        }\n\n        // if user doesn't exist in profile table, add him to profile table\n        if (status !== 200) {\n          const { error } = await supabase.from(\"profiles\").insert({\n            id: session.user.id,\n          });\n          if (error) throw error;\n        }\n      }\n    });\n\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  }, []);\n\n  const handleLogout = () => {\n    window.localStorage.removeItem(\"sb-xftszbubwqexxryeewfj-auth-token\");\n    setSession(null);\n\n    return <Redirect to={`${PROD_URL}/login`} />;\n  };\n\n  const handleSetProfile = (profile) => {\n    setProfile(profile);\n  };\n\n  const value = {\n    // TODO: need to refactor local storage\n    user:\n      JSON.parse(\n        window.localStorage.getItem(\"sb-xftszbubwqexxryeewfj-auth-token\")\n      )?.user || session?.user,\n    token:\n      JSON.parse(\n        window.localStorage.getItem(\"sb-xftszbubwqexxryeewfj-auth-token\")\n      )?.access_token || session?.access_token,\n    onLogout: handleLogout,\n    profile,\n    setProfile: handleSetProfile,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n","import { useContext } from \"react\";\n\nimport { AuthContext } from \"../components/AuthProvider/AuthProvider\";\n\nconst useAuth = () => useContext(AuthContext);\n\nexport { useAuth };\n","import React, { useState, useRef } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n  Button,\n  Alert,\n  FormText,\n  Form,\n} from \"reactstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { toast } from \"react-toastify\";\n\nimport { useAuth } from \"../../hooks\";\nimport { supabase } from \"../../services/supabaseClient\";\nimport Loader from \"../../components/Loader/Loader\";\n\nconst Message = ({ list }) => {\n  const ref = useRef();\n  const [selected, setSelected] = useState([]);\n  const [textInTextArea, setInTextArea] = useState(\"\");\n  const [isBtnSendDisabled, setBtnSendDisabled] = useState(true);\n  const [isBtnClearDisabled, setBtnClearDisabled] = useState(true);\n  const [isAlertSendMessage, setAlertSendMessage] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const data = useAuth();\n\n  const onChangeTypeahead = (item) => {\n    setSelected(item);\n    setBtnClearDisabled(false);\n    setAlertSendMessage(false);\n    setBtnSendDisabled(true);\n  };\n\n  const onInputChangeTypeahead = (value) => {\n    if (value === \"\") {\n      setBtnClearDisabled(true);\n    } else {\n      setBtnClearDisabled(false);\n    }\n  };\n\n  const handleClearTypeahead = () => {\n    ref.current.clear();\n\n    setSelected([]);\n    setBtnClearDisabled(true);\n    setInTextArea(\"\");\n  };\n\n  const onChangeTextarea = (e) => {\n    setInTextArea(e.target.value);\n\n    if (e.target.value.length <= 5) {\n      setBtnSendDisabled(true);\n    } else {\n      setBtnSendDisabled(false);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const { error } = await supabase\n        .from(\"messages\")\n        .insert({\n          text: textInTextArea,\n          authorName: data?.profile?.username,\n          studentId: userSelected.id,\n        })\n        .select();\n\n      if (error) throw error;\n\n      setInTextArea(\"\");\n      setAlertSendMessage(true);\n    } catch (error) {\n      toast(error.message, {\n        type: \"error\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const userSelected = selected.length === 1 && selected[0];\n  const textareaAndBtn = selected.length === 1 && !isAlertSendMessage && (\n    <div>\n      <FormGroup>\n        <Input\n          type=\"textarea\"\n          name=\"text\"\n          id=\"exampleText\"\n          placeholder=\"Input message\"\n          defaultValue={textInTextArea}\n          onChange={onChangeTextarea}\n        />\n        <FormText>Min length 5 characters!</FormText>\n      </FormGroup>\n\n      <FormGroup>\n        <Button color=\"primary\" type=\"submit\" disabled={isBtnSendDisabled}>\n          Send message\n        </Button>\n      </FormGroup>\n    </div>\n  );\n\n  const alertSendMessage = selected.length === 1 && isAlertSendMessage && (\n    <Alert color=\"success\">\n      Your message for {userSelected.firstName} {userSelected.lastName} has been\n      sent successfully!\n    </Alert>\n  );\n\n  const typeAhead = (\n    <FormGroup>\n      <div className=\"d-flex\">\n        <div className=\"flex-fill mr-3\">\n          <Typeahead\n            id=\"students-list\"\n            labelKey={(option) => `${option.firstName} ${option.lastName}`}\n            ref={ref}\n            onChange={onChangeTypeahead}\n            onInputChange={(e) => onInputChangeTypeahead(e)}\n            placeholder=\"Choose a student...\"\n            options={list}\n          />\n        </div>\n        <Button onClick={handleClearTypeahead} disabled={isBtnClearDisabled}>\n          Clear\n        </Button>\n      </div>\n    </FormGroup>\n  );\n\n  return (\n    <Card>\n      <CardBody>\n        <h4 className=\"mb-4\">Send message to anybody</h4>\n\n        <Row>\n          <Col md=\"8\">\n            <Loader isLoading={isLoading}>\n              <Form onSubmit={handleSendMessage}>\n                {typeAhead}\n                {textareaAndBtn}\n                {alertSendMessage}\n              </Form>\n            </Loader>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\n\nimport Message from \"./Message\";\n\nconst MessageContainer = ({ data }) => {\n  if (!data) {\n    return null;\n  }\n\n  return <Message list={data} />;\n};\n\nexport default MessageContainer;\n","import React, { useEffect, useState } from \"react\";\nimport { FormGroup } from \"reactstrap\";\n\nimport { supabase } from \"../../services/supabaseClient\";\n\nexport default function Avatar({ url, size, onUpload }) {\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  // TODO: image downloads all the time when open the page\n  useEffect(() => {\n    if (url) downloadImage(url);\n  }, [url]);\n\n  const downloadImage = async (path) => {\n    try {\n      const { data, error } = await supabase.storage\n        .from(\"avatars\")\n        .download(path);\n      if (error) throw error;\n\n      const url = URL.createObjectURL(data);\n      setAvatarUrl(url);\n    } catch (error) {\n      console.log(\"Error downloading image: \", error.message);\n    }\n  };\n\n  const uploadAvatar = async (event) => {\n    try {\n      setUploading(true);\n\n      if (!event.target.files || event.target.files.length === 0) {\n        throw new Error(\"You must select an image to upload.\");\n      }\n\n      const file = event.target.files[0];\n      const fileExt = file.name.split(\".\").pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `${fileName}`;\n\n      let { error: uploadError } = await supabase.storage\n        .from(\"avatars\")\n        .upload(filePath, file);\n\n      if (uploadError) {\n        throw uploadError;\n      }\n\n      onUpload(filePath);\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div aria-live=\"polite\">\n      <FormGroup>\n        <div className=\"m-auto\" style={{ maxWidth: size }}>\n          <img\n            src={\n              avatarUrl ? avatarUrl : `https://place-hold.it/${size}x${size}`\n            }\n            alt={avatarUrl ? \"Avatar\" : \"No image\"}\n            style={{ height: size, width: \"100%\" }}\n          />\n        </div>\n      </FormGroup>\n\n      <FormGroup>\n        {uploading ? (\n          \"Uploading...\"\n        ) : (\n          <>\n            <label className=\"btn btn-primary btn-block\" htmlFor=\"single\">\n              Upload an avatar\n            </label>\n            <div className=\"d-none\">\n              <input\n                type=\"file\"\n                id=\"single\"\n                accept=\"image/*\"\n                onChange={uploadAvatar}\n                disabled={uploading}\n              />\n            </div>\n          </>\n        )}\n      </FormGroup>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\n\nimport { supabase } from \"../../services/supabaseClient\";\nimport { useAuth } from \"../../hooks\";\nimport Loader from \"../../components/Loader/Loader\";\nimport Avatar from \"../../components/Avatar/Avatar\";\n\nconst Profile = () => {\n  const [isLoading, setLoading] = useState(false);\n  const { user, profile, setProfile } = useAuth();\n\n  const updateProfile = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n\n      const updates = {\n        id: user.id,\n        username: profile?.username || null,\n        website: profile?.website || null,\n        avatar_url: profile?.avatar_url || null,\n        updated_at: new Date(),\n      };\n\n      const { error } = await supabase.from(\"profiles\").upsert(updates);\n      if (error) throw error;\n      toast(\"Profile has been updated!\", {\n        type: \"success\",\n      });\n    } catch (error) {\n      toast(error.message, {\n        type: \"error\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!profile) {\n    return <div>No data</div>;\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <h4 className=\"mb-4\">Profile</h4>\n\n        <Loader isLoading={isLoading}>\n          <Form onSubmit={updateProfile}>\n            <Row>\n              <Col md={3}>\n                <Avatar\n                  url={profile.avatar_url}\n                  size={146}\n                  onUpload={(url) => {\n                    setProfile({\n                      ...profile,\n                      avatar_url: url,\n                    });\n                  }}\n                />\n              </Col>\n\n              <Col md={9}>\n                <FormGroup row={true}>\n                  <Label for=\"email\" sm={3}>\n                    Email:\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"with a placeholder\"\n                      type=\"email\"\n                      value={user.email}\n                      disabled={true}\n                    />\n                  </Col>\n                </FormGroup>\n\n                <FormGroup row={true}>\n                  <Label for=\"name\" sm={3}>\n                    Name:\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      value={profile.username || \"\"}\n                      onChange={(e) =>\n                        setProfile({\n                          ...profile,\n                          username: e.target.value,\n                        })\n                      }\n                    />\n                  </Col>\n                </FormGroup>\n\n                <FormGroup row={true}>\n                  <Label for=\"name\" sm={3}>\n                    Website:\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      id=\"website\"\n                      name=\"website\"\n                      type=\"url\"\n                      value={profile.website || \"\"}\n                      onChange={(e) =>\n                        setProfile({\n                          ...profile,\n                          website: e.target.value,\n                        })\n                      }\n                    />\n                  </Col>\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <Button block={true} color=\"success\" disabled={isLoading}>\n              Update profile\n            </Button>\n          </Form>\n        </Loader>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { useAuth } from \"../../hooks\";\nimport { PROD_URL } from \"../../config\";\n\nconst AuthButton = () => {\n  const { token, onLogout } = useAuth();\n\n  return (\n    <>\n      {token ? (\n        <Button size=\"sm\" color=\"danger\" onClick={onLogout}>\n          Signout\n        </Button>\n      ) : (\n        <Link to={`${PROD_URL}/login`}>\n          <Button size=\"sm\" color=\"success\">\n            Login\n          </Button>\n        </Link>\n      )}\n    </>\n  );\n};\n\nexport default AuthButton;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n} from \"reactstrap\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport { PROD_URL } from \"../../config\";\nimport AuthButton from \"../AuthButton/AuthButton\";\n\nconst Students = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Navbar color=\"light\" light expand=\"md\" className=\"mb-5\">\n      <Container>\n        <Link to={`${PROD_URL}`} className=\"navbar-brand\">\n          <strong>StudentsLab</strong>\n        </Link>\n\n        <NavbarToggler onClick={toggle} />\n\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem className=\"mr-3\">\n              <NavLink to={`${PROD_URL}`} exact className=\"nav-link\">\n                Dashboard\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <NavLink to={`${PROD_URL}/message`} className=\"nav-link\">\n                Send Message\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <NavLink to={`${PROD_URL}/profile`} className=\"nav-link\">\n                Profile\n              </NavLink>\n            </NavItem>\n          </Nav>\n\n          <AuthButton />\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Students;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nconst Layout = ({ children }) => (\n  <Container>\n    <Row>\n      <Col>{children}</Col>\n    </Row>\n  </Container>\n);\n\nexport default Layout;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Row,\n} from \"reactstrap\";\nimport { toast } from \"react-toastify\";\n\nimport { supabase } from \"../../services/supabaseClient\";\nimport { useAuth } from \"../../hooks\";\nimport { PROD_URL } from \"../../config\";\nimport Loader from \"../Loader/Loader\";\n\nconst Auth = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const isBtnDisabled = email === \"\";\n  const { token } = useAuth();\n\n  if (token) {\n    return <Redirect to={`${PROD_URL}`} />;\n  }\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const { error } = await supabase.auth.signInWithOtp({ email });\n\n      if (error) throw error;\n      toast(\"Check your email for the login link!\", {\n        type: \"success\",\n      });\n    } catch (error) {\n      toast(error.message, {\n        type: \"error\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOnChange = (e) => setEmail(e.target.value);\n\n  return (\n    <Row>\n      <Col\n        md={{\n          offset: 3,\n          size: 6,\n        }}\n      >\n        <Card>\n          <CardBody aria-live=\"polite\">\n            <Loader isLoading={isLoading} text=\"Sending magic link...\">\n              <h1 className=\"mb-4\">Supabase + React</h1>\n              <p className=\"mb-4\">\n                Sign in via magic link with your email below\n              </p>\n\n              <Form onSubmit={handleOnSubmit}>\n                <FormGroup>\n                  <Input\n                    id=\"email\"\n                    className=\"inputField\"\n                    type=\"email\"\n                    placeholder=\"Your email\"\n                    value={email}\n                    onChange={handleOnChange}\n                  />\n                </FormGroup>\n\n                <Button\n                  color=\"success\"\n                  block={true}\n                  className=\"text-uppercase\"\n                  type=\"submit\"\n                  disabled={isBtnDisabled}\n                >\n                  Send magic link\n                </Button>\n              </Form>\n            </Loader>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { PROD_URL } from \"../../config\";\nimport { useAuth } from \"../../hooks\";\n\nconst ProtectedRouter = ({ children }) => {\n  const { token } = useAuth();\n\n  if (!token) {\n    return <Redirect to={`${PROD_URL}/login`} />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRouter;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\n// TODO: make clear import file\nimport { StudentsContainer, MessageContainer } from \"./pages/index\";\nimport { Auth, Header, Layout } from \"./components/index\";\n// TODO: need to refactor PROD URL\nimport { PROD_URL } from \"./config\";\nimport { supabase } from \"./services/supabaseClient\";\nimport AuthProvider from \"./components/AuthProvider/AuthProvider\";\nimport ProtectedRouter from \"./components/ProtectedRouter/ProtectedRouter\";\nimport { Profile } from \"./pages\";\n\nconst App = () => {\n  const [studentsDataList, setStudentsDataList] = useState(null);\n  const [isDataLoading, setDataLoading] = useState(false);\n\n  const getData = () => {\n    setDataLoading(true);\n    const promiseLocalData = fetch(`${PROD_URL}/data.json`).then((res) =>\n      res.json()\n    );\n    const promiseSupabaseData = supabase\n      .from(\"students\")\n      .select()\n      .order(\"id\", { ascending: true });\n\n    Promise.all([promiseLocalData, promiseSupabaseData])\n      .then((values) => {\n        const [localData, supabaseData] = values;\n\n        if (supabaseData?.data.length) {\n          const data = localData.students.concat(supabaseData.data);\n          setStudentsDataList(data);\n          return;\n        }\n\n        setStudentsDataList(localData.students);\n      })\n      .catch((err) => {\n        console.error(\"getData Promise.all\", err);\n      })\n      .finally(() => setDataLoading(false));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <AuthProvider>\n      <Router>\n        <Header />\n\n        <Layout>\n          <Switch>\n            <Route path={`${PROD_URL}/login`} exact>\n              <Auth />\n            </Route>\n\n            <Route path={`${PROD_URL}`} exact>\n              <ProtectedRouter>\n                <StudentsContainer\n                  data={studentsDataList}\n                  isDataLoading={isDataLoading}\n                  onDataLoading={setDataLoading}\n                  onSetData={setStudentsDataList}\n                />\n              </ProtectedRouter>\n            </Route>\n\n            <Route path={`${PROD_URL}/message`} exact>\n              <MessageContainer data={studentsDataList} />\n            </Route>\n\n            <Route path={`${PROD_URL}/profile`} exact>\n              <ProtectedRouter>\n                <Profile />\n              </ProtectedRouter>\n            </Route>\n\n            <Route path=\"*\">\n              <Redirect to={`${PROD_URL}`} />\n            </Route>\n          </Switch>\n        </Layout>\n\n        <ToastContainer autoClose={2000} />\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}